{"version":3,"file":"5c0b189e-fb92ba014afd3653dcbc.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/@floating-ui/react/dist/floating-ui.react.mjs"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { stopEvent, getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableCombobox, isVirtualClick, isVirtualPointerEvent, getTarget, getPlatform, isTypeableElement, isReactEvent, isRootElement, isEventTargetWithin, isMac, getUserAgent } from '@floating-ui/react/utils';\nimport { floor } from '@floating-ui/utils';\nimport { platform, getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\nimport { isElement, getNodeName, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, getComputedStyle } from '@floating-ui/utils/dom';\nimport { tabbable, isTabbable } from 'tabbable';\nimport { createPortal, flushSync } from 'react-dom';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabled(list, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isDisabled(list, index, disabledIndices) {\n  if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = list[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nfunction areMapsEqual(map1, map2) {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  for (const [key, value] of map1.entries()) {\n    if (value !== map2.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(props) {\n  const {\n    children,\n    elementsRef,\n    labelsRef\n  } = props;\n  const [map, setMap] = React.useState(() => new Map());\n  const register = React.useCallback(node => {\n    setMap(prevMap => new Map(prevMap).set(node, null));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setMap(prevMap => {\n      const map = new Map(prevMap);\n      map.delete(node);\n      return map;\n    });\n  }, []);\n  index(() => {\n    const newMap = new Map(map);\n    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);\n    nodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    if (!areMapsEqual(map, newMap)) {\n      setMap(newMap);\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef])\n  }, children);\n}\n/**\n * Used to register a list item and its index (DOM position) in the\n * `FloatingList`.\n * @see https://floating-ui.com/docs/FloatingList#uselistitem\n */\nfunction useListItem(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    label\n  } = props;\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nfunction renderJsx(render, computedProps) {\n  if (typeof render === 'function') {\n    return render(computedProps);\n  }\n  if (render) {\n    return /*#__PURE__*/React.cloneElement(render, computedProps);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", computedProps);\n}\nconst CompositeContext = /*#__PURE__*/React.createContext({\n  activeIndex: 0,\n  onNavigate: () => {}\n});\nconst horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];\nconst verticalKeys = [ARROW_UP, ARROW_DOWN];\nconst allKeys = [...horizontalKeys, ...verticalKeys];\n\n/**\n * Creates a single tab stop whose items are navigated by arrow keys, which\n * provides list navigation outside of floating element contexts.\n *\n * This is useful to enable navigation of a list of items that aren’t part of a\n * floating element. A menubar is an example of a composite, with each reference\n * element being an item.\n * @see https://floating-ui.com/docs/Composite\n */\nconst Composite = /*#__PURE__*/React.forwardRef(function Composite(props, forwardedRef) {\n  const {\n    render,\n    orientation = 'both',\n    loop = true,\n    cols = 1,\n    disabledIndices,\n    activeIndex: externalActiveIndex,\n    onNavigate: externalSetActiveIndex,\n    itemSizes,\n    dense = false,\n    ...domProps\n  } = props;\n  const [internalActiveIndex, internalSetActiveIndex] = React.useState(0);\n  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;\n  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);\n  const elementsRef = React.useRef([]);\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const contextValue = React.useMemo(() => ({\n    activeIndex,\n    onNavigate\n  }), [activeIndex, onNavigate]);\n  const isGrid = cols > 1;\n  function handleKeyDown(event) {\n    if (!allKeys.includes(event.key)) return;\n    let nextIndex = activeIndex;\n    const minIndex = getMinIndex(elementsRef, disabledIndices);\n    const maxIndex = getMaxIndex(elementsRef, disabledIndices);\n    if (isGrid) {\n      const sizes = itemSizes || Array.from({\n        length: elementsRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(elementsRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(elementsRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      nextIndex = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex ? elementsRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || elementsRef.current.map((_, index) => isDisabled(elementsRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(activeIndex > maxIndex ? minIndex : activeIndex, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction we're\n        // moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl')\n      })]; // navigated cell will never be nullish\n    }\n    const toEndKeys = {\n      horizontal: [ARROW_RIGHT],\n      vertical: [ARROW_DOWN],\n      both: [ARROW_RIGHT, ARROW_DOWN]\n    }[orientation];\n    const toStartKeys = {\n      horizontal: [ARROW_LEFT],\n      vertical: [ARROW_UP],\n      both: [ARROW_LEFT, ARROW_UP]\n    }[orientation];\n    const preventedKeys = isGrid ? allKeys : {\n      horizontal: horizontalKeys,\n      vertical: verticalKeys,\n      both: allKeys\n    }[orientation];\n    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {\n      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {\n        nextIndex = minIndex;\n      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {\n        nextIndex = maxIndex;\n      } else {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: nextIndex,\n          decrement: toStartKeys.includes(event.key),\n          disabledIndices\n        });\n      }\n    }\n    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {\n      event.stopPropagation();\n      if (preventedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n      onNavigate(nextIndex);\n\n      // Wait for FocusManager `returnFocus` to execute.\n      queueMicrotask(() => {\n        enqueueFocus(elementsRef.current[nextIndex]);\n      });\n    }\n  }\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: forwardedRef,\n    'aria-orientation': orientation === 'both' ? undefined : orientation,\n    onKeyDown(e) {\n      domProps.onKeyDown == null || domProps.onKeyDown(e);\n      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e);\n      handleKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CompositeContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(FloatingList, {\n    elementsRef: elementsRef\n  }, renderJsx(render, computedProps)));\n});\n/**\n * @see https://floating-ui.com/docs/Composite\n */\nconst CompositeItem = /*#__PURE__*/React.forwardRef(function CompositeItem(props, forwardedRef) {\n  const {\n    render,\n    ...domProps\n  } = props;\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const {\n    activeIndex,\n    onNavigate\n  } = React.useContext(CompositeContext);\n  const {\n    ref,\n    index\n  } = useListItem();\n  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);\n  const isActive = activeIndex === index;\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: mergedRef,\n    tabIndex: isActive ? 0 : -1,\n    'data-active': isActive ? '' : undefined,\n    onFocus(e) {\n      domProps.onFocus == null || domProps.onFocus(e);\n      renderElementProps.onFocus == null || renderElementProps.onFocus(e);\n      onNavigate(index);\n    }\n  };\n  return renderJsx(render, computedProps);\n});\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => // Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  if (!floating) {\n    return null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const [side, alignment] = placement.split('-');\n  const isRTL = platform.isRTL(floating);\n  const isCustomShape = !!d;\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  const yOffsetProp = staticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = staticOffset && alignment === 'end' ? 'right' : 'left';\n  if (staticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? staticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? staticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: \"\" + rotation + (transform != null ? transform : ''),\n      ...restStyle\n    }\n  }), computedStrokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + computedStrokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the `FloatingTree`, returning its id.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null || tree.addNode(node);\n    return () => {\n      tree == null || tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(props) {\n  const {\n    children,\n    id\n  } = props;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n}\n\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM.\n * This is not necessary in all cases, except when there must be explicit communication between parent and child floating elements. It is necessary for:\n * - The `bubbles` option in the `useDismiss()` Hook\n * - Nested virtual list navigation\n * - Nested floating elements that each open on hover\n * - Custom communication between parent and child floating elements\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(props) {\n  const {\n    children\n  } = props;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [addNode, removeNode, events])\n  }, children);\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef(-1);\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef(-1);\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeout(timeoutRef.current);\n        clearTimeout(restTimeoutRef.current);\n        blockMouseMoveRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = window.setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = useEffectEvent(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  });\n  const clearPointerEvents = useEffectEvent(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(floating).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  });\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && !getDelay(delayRef.current, 'open')) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = window.setTimeout(() => {\n          onOpenChange(true, event, 'hover');\n        }, openDelay);\n      } else {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current && dataRef.current.floatingContext) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...dataRef.current.floatingContext,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay(event, true, 'safe-polygon');\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      if (!dataRef.current.floatingContext) return;\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...dataRef.current.floatingContext,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null || floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null || floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren;\n        const ref = domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove(event) {\n          const {\n            nativeEvent\n          } = event;\n          function handleMouseMove() {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true, nativeEvent, 'hover');\n            }\n          }\n          if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n            return;\n          }\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          if (pointerTypeRef.current === 'touch') {\n            handleMouseMove();\n          } else {\n            restTimeoutRef.current = window.setTimeout(handleMouseMove, restMs);\n          }\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave(event) {\n          closeWithDelay(event.nativeEvent, false);\n        }\n      }\n    };\n  }, [enabled, mouseOnly, open, restMs, onOpenChange, closeWithDelay]);\n}\n\nconst NOOP = () => {};\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: NOOP,\n  setState: NOOP,\n  isInstantPhase: false\n});\n\n/**\n * @deprecated\n * Use the return value of `useDelayGroup()` instead.\n */\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction FloatingDelayGroup(props) {\n  const {\n    children,\n    delay,\n    timeoutMs = 0\n  } = props;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else if (!state.isInstantPhase) {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      if (state.isInstantPhase) {\n        setState({\n          isInstantPhase: false\n        });\n      }\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId, state.isInstantPhase]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setCurrentId])\n  }, children);\n}\n/**\n * Enables grouping when called inside a component that's a child of a\n * `FloatingDelayGroup`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction useDelayGroup(context, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    floatingId\n  } = context;\n  const {\n    id: optionId\n  } = options;\n  const id = optionId != null ? optionId : floatingId;\n  const groupContext = useDelayGroupContext();\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = groupContext;\n  index(() => {\n    if (!currentId) return;\n    setState({\n      delay: {\n        open: 1,\n        close: getDelay(initialDelay, 'close')\n      }\n    });\n    if (currentId !== id) {\n      onOpenChange(false);\n    }\n  }, [id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!currentId) return;\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n      unset();\n    }\n  }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (setCurrentId === NOOP || !open) return;\n    setCurrentId(id);\n  }, [open, setCurrentId, id]);\n  return groupContext;\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    [].forEach.call(parent.children, node => {\n      if (getNodeName(node) === 'script') return;\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    // Wait for the uniqueId to be generated before creating the portal node in\n    // React <18 (using `useFloatingId` instead of the native `useId`).\n    // https://github.com/floating-ui/floating-ui/issues/2778\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null || prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null || nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  let tabbableEl = element;\n  if (!tabbableEl || getNodeName(tabbableEl) === 'body') return;\n  if (!isTabbable(tabbableEl, getTabbableOptions())) {\n    const tabbableChild = tabbable(tabbableEl, getTabbableOptions())[0];\n    if (tabbableChild) {\n      tabbableEl = tabbableChild;\n    }\n  }\n  previouslyFocusedElements.push(tabbableEl);\n  if (previouslyFocusedElements.length > LIST_LIMIT) {\n    previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    restoreFocus = false,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    floatingId,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const tabbableIndexRef = React.useRef(-1);\n  const isInsidePortal = portalContext != null;\n  const firstElementChild = floating == null ? void 0 : floating.firstElementChild;\n  // If the floating element is acting as a positioning wrapper rather than the\n  // element that receives aria props, use it as the focus root instead.\n  const floatingFocusNode = (firstElementChild == null ? void 0 : firstElementChild.id) === floatingId ? firstElementChild : floating;\n  const getTabbableContent = useEffectEvent(function (container) {\n    if (container === void 0) {\n      container = floatingFocusNode;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  });\n  const getTabbableElements = useEffectEvent(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floatingFocusNode && type === 'floating') {\n        return floatingFocusNode;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  });\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floatingFocusNode, activeElement(getDocument(floatingFocusNode))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floatingFocusNode && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floatingFocusNode);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floatingFocusNode, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!floating) return;\n    function handleFocusIn(event) {\n      const target = getTarget(event);\n      const tabbableContent = getTabbableContent();\n      const tabbableIndex = tabbableContent.indexOf(target);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n    }\n    floating.addEventListener('focusin', handleFocusIn);\n    return () => {\n      floating.removeEventListener('focusin', handleFocusIn);\n    };\n  }, [disabled, floating, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Restore focus to the previous tabbable element index to prevent\n        // focus from being lost outside the floating tree.\n        if (restoreFocus && movedToUnrelatedNode && activeElement(getDocument(floatingFocusNode)) === getDocument(floatingFocusNode).body) {\n          // Let `FloatingPortal` effect knows that focus is still inside the\n          // floating tree.\n          if (isHTMLElement(floatingFocusNode)) {\n            floatingFocusNode == null || floatingFocusNode.focus();\n          }\n          const prevTabbableIndex = tabbableIndexRef.current;\n          const tabbableContent = getTabbableContent();\n          const nodeToFocus = tabbableContent[prevTabbableIndex] || tabbableContent[tabbableContent.length - 1] || floatingFocusNode;\n          if (isHTMLElement(nodeToFocus)) {\n            nodeToFocus.focus();\n          }\n        }\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if (!modal && relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event);\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, floatingFocusNode, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut, restoreFocus, getTabbableContent]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !isHTMLElement(floatingFocusNode)) return;\n    const doc = getDocument(floatingFocusNode);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floatingFocusNode);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floatingFocusNode;\n      const focusAlreadyInsideFloatingEl = contains(floatingFocusNode, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floatingFocusNode\n        });\n      }\n    });\n  }, [disabled, open, floatingFocusNode, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floatingFocusNode) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floatingFocusNode);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    let openEvent = contextData.openEvent;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        open,\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (open) {\n        openEvent = event;\n      }\n      if (reason === 'escape-key' && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      if (reason === 'hover' && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else {\n        preventReturnFocusRef.current = !(isVirtualClick(event) || isVirtualPointerEvent(event));\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      });\n      const shouldFocusReference = isFocusInsideFloatingTree || openEvent && ['click', 'mousedown'].includes(openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      const returnElement = getPreviouslyFocusedElement();\n      if (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(returnElement) && (\n      // If the focus moved somewhere else after mount, avoid returning focus\n      // since it likely entered a different element which should be\n      // respected: https://github.com/floating-ui/floating-ui/issues/2607\n      returnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n        enqueueFocus(returnElement, {\n          // When dismissing nested floating elements, by the time the rAF has\n          // executed, the menus will all have been unmounted. When they try\n          // to get focused, the calls get ignored — leaving the root\n          // reference focused as desired.\n          cancelPrevious: false,\n          preventScroll: preventReturnFocusScroll\n        });\n      }\n    };\n  }, [disabled, floating, floatingFocusNode, returnFocusRef, dataRef, refs, events, tree, nodeId]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled) return;\n    if (!portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled) return;\n    if (!floatingFocusNode) return;\n    if (typeof MutationObserver !== 'function') return;\n    if (ignoreInitialFocus) return;\n    const handleMutation = () => {\n      const tabIndex = floatingFocusNode.getAttribute('tabindex');\n      const tabbableContent = getTabbableContent();\n      const activeEl = activeElement(getDocument(floating));\n      const tabbableIndex = tabbableContent.indexOf(activeEl);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n      if (orderRef.current.includes('floating') || activeEl !== refs.domReference.current && tabbableContent.length === 0) {\n        if (tabIndex !== '0') {\n          floatingFocusNode.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floatingFocusNode.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floatingFocusNode, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, floatingFocusNode, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null || nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null || prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nconst activeLocks = /*#__PURE__*/new Set();\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(props, ref) {\n  const {\n    lockScroll = false,\n    ...rest\n  } = props;\n  const lockId = useId();\n  index(() => {\n    if (!lockScroll) return;\n    activeLocks.add(lockId);\n    const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());\n    const bodyStyle = document.body.style;\n    // RTL <body> scrollbar\n    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n    const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.pageXOffset;\n    const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.pageYOffset;\n    bodyStyle.overflow = 'hidden';\n    if (scrollbarWidth) {\n      bodyStyle[paddingProp] = scrollbarWidth + \"px\";\n    }\n\n    // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n    // technique has fewer side effects.\n    if (isIOS) {\n      var _window$visualViewpor, _window$visualViewpor2;\n      // iOS 12 does not support `visualViewport`.\n      const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n      const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n      Object.assign(bodyStyle, {\n        position: 'fixed',\n        top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n        left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n        right: '0'\n      });\n    }\n    return () => {\n      activeLocks.delete(lockId);\n      if (activeLocks.size === 0) {\n        Object.assign(bodyStyle, {\n          overflow: '',\n          [paddingProp]: ''\n        });\n        if (isIOS) {\n          Object.assign(bodyStyle, {\n            position: '',\n            top: '',\n            left: '',\n            right: ''\n          });\n          window.scrollTo(scrollX, scrollY);\n        }\n      }\n    };\n  }, [lockId, lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onClick(event) {\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n            onOpenChange(false, event.nativeEvent, 'click');\n          } else {\n            onOpenChange(true, event.nativeEvent, 'click');\n          }\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n            didKeyDownRef.current = true;\n          }\n          if (event.key === 'Enter') {\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ' && didKeyDownRef.current) {\n            didKeyDownRef.current = false;\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent, 'click');\n            } else {\n              onOpenChange(true, event.nativeEvent, 'click');\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n}\n\nfunction createVirtualElement(domElement, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domElement || undefined,\n    getBoundingClientRect() {\n      var _data$dataRef$current;\n      const domRect = (domElement == null ? void 0 : domElement.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    dataRef,\n    elements: {\n      floating,\n      domReference\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(floating);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(floating, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(domReference);\n  }, [openCheck, enabled, x, y, floating, dataRef, refs, domReference, setReference]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerTypeRef,\n        onPointerEnter: setPointerTypeRef,\n        onMouseMove: handleReferenceEnterOrMove,\n        onMouseEnter: handleReferenceEnterOrMove\n      }\n    };\n  }, [enabled, handleReferenceEnterOrMove]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    var _dataRef$current$floa;\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n    const nodeId = (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    var _dataRef$current$floa2;\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const nodeId = (_dataRef$current$floa2 = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa2.nodeId;\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [bubbleHandlerKeys[referencePressEvent]]: event => {\n          if (referencePress) {\n            onOpenChange(false, event.nativeEvent, 'reference-press');\n          }\n        }\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n        onMouseDown() {\n          endedOrStartedInsideRef.current = true;\n        },\n        onMouseUp() {\n          endedOrStartedInsideRef.current = true;\n        },\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, referencePress, outsidePressEvent, referencePressEvent, onOpenChange, closeOnEscapeKeyDown]);\n}\n\nfunction useFloatingRootContext(options) {\n  const {\n    open = false,\n    onOpenChange: onOpenChangeProp,\n    elements: elementsProp\n  } = options;\n  const floatingId = useId();\n  const dataRef = React.useRef({});\n  const [events] = React.useState(() => createPubSub());\n  const nested = useFloatingParentNodeId() != null;\n  if (process.env.NODE_ENV !== \"production\") {\n    const optionDomReference = elementsProp.reference;\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  const [positionReference, setPositionReference] = React.useState(elementsProp.reference);\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    onOpenChangeProp == null || onOpenChangeProp(open, event, reason);\n  });\n  const refs = React.useMemo(() => ({\n    setPositionReference\n  }), []);\n  const elements = React.useMemo(() => ({\n    reference: positionReference || elementsProp.reference || null,\n    floating: elementsProp.floating || null,\n    domReference: elementsProp.reference\n  }), [positionReference, elementsProp.reference, elementsProp.floating]);\n  return React.useMemo(() => ({\n    dataRef,\n    open,\n    onOpenChange,\n    elements,\n    events,\n    floatingId,\n    refs\n  }), [open, onOpenChange, elements, events, floatingId, refs]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    nodeId\n  } = options;\n  const internalRootContext = useFloatingRootContext({\n    ...options,\n    elements: {\n      reference: null,\n      floating: null,\n      ...options.elements\n    }\n  });\n  const rootContext = options.rootContext || internalRootContext;\n  const computedElements = rootContext.elements;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = computedElements == null ? void 0 : computedElements.reference;\n  const domReference = optionDomReference || _domReference;\n  const domReferenceRef = React.useRef(null);\n  const tree = useFloatingTree();\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...computedElements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    ...rootContext,\n    refs,\n    elements,\n    nodeId\n  }), [position, refs, elements, nodeId, rootContext]);\n  index(() => {\n    rootContext.dataRef.current.floatingContext = context;\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const win = getWindow(domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(event) {\n          if (isVirtualPointerEvent(event.nativeEvent)) return;\n          keyboardModalityRef.current = false;\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          if (blockFocusRef.current) return;\n          const target = getTarget(event.nativeEvent);\n          if (visibleOnly && isElement(target)) {\n            try {\n              // Mac Safari unreliably matches `:focus-visible` on the reference\n              // if focus was outside the page initially - use the fallback\n              // instead.\n              if (isSafari() && isMac()) throw Error();\n              if (!target.matches(':focus-visible')) return;\n            } catch (e) {\n              // Old browsers will throw an error when using `:focus-visible`.\n              if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n                return;\n              }\n            }\n          }\n          onOpenChange(true, event.nativeEvent, 'focus');\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = window.setTimeout(() => {\n            var _dataRef$current$floa;\n            const activeEl = activeElement(domReference ? domReference.ownerDocument : document);\n\n            // Focus left the page, keep it open.\n            if (!relatedTarget && activeEl === domReference) return;\n\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            // We can not rely on relatedTarget to point to the correct element\n            // as it will only point to the shadow host of the newly focused element\n            // and not the element that actually has received focus if it is located\n            // inside a shadow root.\n            if (contains((_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.refs.floating.current, activeEl) || contains(domReference, activeEl) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false, event.nativeEvent, 'focus');\n          });\n        }\n      }\n    };\n  }, [enabled, visibleOnly, dataRef, domReference, onOpenChange]);\n}\n\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!floating);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const floatingRef = useLatestRef(floating);\n  const selectedIndexRef = useLatestRef(selectedIndex);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    function runFocus(item) {\n      if (virtual) {\n        setActiveId(item.id);\n        tree == null || tree.events.emit('virtualfocus', item);\n        if (virtualItemRef) {\n          virtualItemRef.current = item;\n        }\n      } else {\n        enqueueFocus(item, {\n          preventScroll: true,\n          // Mac Safari does not move the virtual cursor unless the focus call\n          // is sync. However, for the very first focus call, we need to wait\n          // for the position to be ready in order to prevent unwanted\n          // scrolling. This means the virtual cursor will not move to the first\n          // item when first opening the floating element, but will on\n          // subsequent calls. `preventScroll` is supported in modern Safari,\n          // so we can use that instead.\n          // iOS Safari must be async or the first item will not be focused.\n          sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n        });\n      }\n    }\n    const initialItem = listRef.current[indexRef.current];\n    if (initialItem) {\n      runFocus(initialItem);\n    }\n    requestAnimationFrame(() => {\n      const waitedItem = listRef.current[indexRef.current] || initialItem;\n      if (!waitedItem) return;\n      if (!initialItem) {\n        runFocus(waitedItem);\n      }\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        waitedItem.scrollIntoView == null || waitedItem.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndexRef.current != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousMountedRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, floating, activeIndex, selectedIndexRef, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled || !tree || !virtual || parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(floatingRef.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, floatingRef, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === floatingRef.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false, event.nativeEvent, 'list-navigation');\n        if (isHTMLElement(domReference) && !virtual) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        const sizes = itemSizes || Array.from({\n          length: listRef.current.length\n        }, () => ({\n          width: 1,\n          height: 1\n        }));\n        // To calculate movements on the grid, we use hypothetical cell indices\n        // as if every item was 1x1, then convert back to real indices.\n        const cellMap = buildCellMap(sizes, cols, dense);\n        const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(listRef.current, index, disabledIndices));\n        // last enabled index\n        const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(listRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n        indexRef.current = cellMap[getGridNavigatedIndex({\n          current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n        }, {\n          event,\n          orientation,\n          loop,\n          cols,\n          // treat undefined (empty grid spaces) as disabled indices so we\n          // don't end up in them\n          disabledIndices: getCellIndices([...(disabledIndices || listRef.current.map((_, index) => isDisabled(listRef.current, index) ? index : undefined)), undefined], cellMap),\n          minIndex: minGridIndex,\n          maxIndex: maxGridIndex,\n          prevIndex: getCellIndexOfCorner(indexRef.current > maxIndex ? minIndex : indexRef.current, sizes, cellMap, cols,\n          // use a corner matching the edge closest to the direction\n          // we're moving in so we don't end up in the same item. Prefer\n          // top/left over bottom/right.\n          event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl'),\n          stopEvent: true\n        })]; // navigated cell will never be nullish\n\n        onNavigate(indexRef.current);\n        if (orientation === 'both') {\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n    const activeItem = listRef.current.find(item => (item == null ? void 0 : item.id) === activeId);\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n          const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n          const isMainKey = isMainOrientationKey(event.key, orientation);\n          const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n          if (virtual && open) {\n            const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n            const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n            if (isArrowKey && deepestNode && virtualItemRef) {\n              const eventObject = new KeyboardEvent('keydown', {\n                key: event.key,\n                bubbles: true\n              });\n              if (isCrossOpenKey || isCrossCloseKey) {\n                var _deepestNode$context, _deepestNode$context2;\n                const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n                const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? activeItem : null;\n                if (dispatchItem) {\n                  stopEvent(event);\n                  dispatchItem.dispatchEvent(eventObject);\n                  setVirtualId(undefined);\n                }\n              }\n              if (isMainKey && deepestNode.context) {\n                if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                  var _deepestNode$context$;\n                  stopEvent(event);\n                  (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                  return;\n                }\n              }\n            }\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          if (isNavigationKey) {\n            keyRef.current = nested && isMainKey ? null : event.key;\n          }\n          if (nested) {\n            if (isCrossOpenKey) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true, event.nativeEvent, 'list-navigation');\n              }\n            }\n            return;\n          }\n          if (isMainKey) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open && !virtual) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...(!isTypeableCombobox(domReference) && ariaActiveDescendantProp),\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, floatingRef, activeId, virtualId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item, tree, virtualItemRef, itemSizes, dense]);\n}\n\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        reference: {\n          [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n        'aria-controls': open ? floatingId : undefined,\n        ...(ariaRole === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(ariaRole === 'menu' && {\n          id: referenceId\n        }),\n        ...(ariaRole === 'menu' && isNested && {\n          role: 'menuitem'\n        }),\n        ...(role === 'select' && {\n          'aria-autocomplete': 'none'\n        }),\n        ...(role === 'combobox' && {\n          'aria-autocomplete': 'list'\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(ariaRole === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      },\n      item(_ref) {\n        let {\n          active,\n          selected\n        } = _ref;\n        const commonProps = {\n          role: 'option',\n          ...(active && {\n            id: floatingId + \"-option\"\n          })\n        };\n\n        // For `menu`, we are unable to tell if the item is a `menuitemradio`\n        // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n        // avoid defaulting to `menuitem` as it may overwrite custom role props.\n        switch (role) {\n          case 'select':\n            return {\n              ...commonProps,\n              'aria-selected': active && selected\n            };\n          case 'combobox':\n            {\n              return {\n                ...commonProps,\n                ...(active && {\n                  'aria-selected': true\n                })\n              };\n            }\n        }\n        return {};\n      }\n    };\n  }, [enabled, role, ariaRole, open, floatingId, referenceId, isNested]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open && isMounted) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, isMounted, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n  if (!isMounted && status === 'close') {\n    setStatus('unmounted');\n  }\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setTypingChange(value) {\n      if (value) {\n        if (!dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      } else {\n        if (dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      }\n    }\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    function onKeyDown(event) {\n      const listContent = listRef.current;\n      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n        if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n          setTypingChange(false);\n        } else if (event.key === ' ') {\n          stopEvent(event);\n        }\n      }\n      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n      // Character key.\n      event.key.length !== 1 ||\n      // Modifier key.\n      event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n      if (open && event.key !== ' ') {\n        stopEvent(event);\n        setTypingChange(true);\n      }\n\n      // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n      // allow it in this case, too.\n      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n        var _text$, _text$2;\n        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n      });\n\n      // Allows the user to cycle through items that start with the same letter\n      // in rapid succession.\n      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n      }\n      stringRef.current += event.key;\n      clearTimeout(timeoutIdRef.current);\n      timeoutIdRef.current = setTimeout(() => {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n        setTypingChange(false);\n      }, resetMs);\n      const prevIndex = prevIndexRef.current;\n      const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n      if (index !== -1) {\n        onMatch(index);\n        matchIndexRef.current = index;\n      } else if (event.key !== ' ') {\n        stringRef.current = '';\n        setTypingChange(false);\n      }\n    }\n    return {\n      reference: {\n        onKeyDown\n      },\n      floating: {\n        onKeyDown,\n        onKeyUp(event) {\n          if (event.key === ' ') {\n            setTypingChange(false);\n          }\n        }\n      }\n    };\n  }, [enabled, open, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch, onTypingChange]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside\n * of it is anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = props;\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        warn('`placement` side must be \"bottom\" when using the `inner`', 'middleware.');\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = Math.max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));\n    el.style.maxHeight = maxHeight + \"px\";\n    el.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      if (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {\n        flushSync(() => onFallbackChange(true));\n      } else {\n        flushSync(() => onFallbackChange(false));\n      }\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, el.offsetHeight), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      floating: {\n        onKeyDown() {\n          controlledScrollingRef.current = true;\n        },\n        onWheel() {\n          controlledScrollingRef.current = false;\n        },\n        onPointerMove() {\n          controlledScrollingRef.current = false;\n        },\n        onScroll() {\n          const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n          if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n            return;\n          }\n          if (prevScrollTopRef.current !== null) {\n            const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n              flushSync(() => onChange(d => d + scrollDiff));\n            }\n          }\n\n          // [Firefox] Wait for the height change to have been applied.\n          requestAnimationFrame(() => {\n            prevScrollTopRef.current = el.scrollTop;\n          });\n        }\n      }\n    };\n  }, [enabled, overflowRef, elements.floating, scrollRef, onChange]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safepolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      }\n      if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { Composite, CompositeItem, FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingRootContext, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n"],"names":["useMergeRefs","refs","every","ref","value","forEach","current","SafeReact","useSafeInsertionEffect","useInsertionEffect","fn","useEffectEvent","callback","_len","arguments","length","args","Array","_key","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","isDifferentRow","index","cols","prevRow","Math","floor","isIndexOutOfBounds","listRef","getMinIndex","disabledIndices","findNonDisabledIndex","getMaxIndex","decrement","startingIndex","_temp","amount","list","isDisabled","getGridNavigatedIndex","elementsRef","_ref","event","orientation","loop","minIndex","maxIndex","prevIndex","stopEvent","stop","nextIndex","key","col","maxCol","offset","lastRow","buildCellMap","sizes","dense","cellMap","startIndex","_ref2","width","height","itemPlaced","targetCells","i","j","push","cell","getCellIndexOfCorner","corner","firstCellIndex","indexOf","sizeItem","lastIndexOf","getCellIndices","indices","flatMap","cellIndex","includes","element","hasAttribute","getAttribute","rafId","enqueueFocus","el","options","preventScroll","cancelPrevious","sync","cancelAnimationFrame","exec","focus","requestAnimationFrame","document","useLayoutEffect","useEffect","sortByDocumentPosition","a","b","position","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","FloatingListContext","register","unregister","map","Map","FloatingList","props","children","labelsRef","setMap","node","prevMap","set","delete","newMap","from","keys","sort","map1","map2","size","entries","get","areMapsEqual","Provider","useListItem","label","index$1","setIndex","componentRef","_node$textContent","isLabelDefined","undefined","textContent","horizontalKeys","verticalKeys","_extends","Object","assign","bind","target","source","prototype","hasOwnProperty","call","apply","this","serverHandoffComplete","count","genId","random","toString","slice","useId","id","setId","createPubSub","emit","data","_map$get","handler","on","listener","off","_map$get2","filter","l","FloatingNodeContext","FloatingTreeContext","useFloatingParentNodeId","_React$useContext","useFloatingTree","createAttribute","name","useLatestRef","useRef","safePolygonIdentifier","getDelay","prop","pointerType","useHover","context","open","onOpenChange","dataRef","events","elements","domReference","floating","enabled","delay","handleClose","mouseOnly","restMs","move","tree","parentId","handleCloseRef","delayRef","pointerTypeRef","timeoutRef","handlerRef","restTimeoutRef","blockMouseMoveRef","performedPointerEventsMutationRef","unbindMouseMoveRef","isHoverOpen","_dataRef$current$open","type","openEvent","clearTimeout","onLeave","html","documentElement","addEventListener","removeEventListener","closeWithDelay","runElseBranch","reason","closeDelay","window","setTimeout","cleanupMouseMoveHandler","clearPointerEvents","body","style","pointerEvents","removeAttribute","onScrollMouseLeave","onMouseEnter","once","onMouseLeave","isClickLikeOpenEvent","openDelay","doc","floatingContext","x","clientX","y","clientY","onClose","relatedTarget","_handleCloseRef$curre","__options","blockPointerEvents","setAttribute","_tree$nodesRef$curren","parentFloating","nodesRef","find","setPointerRef","reference","onPointerDown","onPointerEnter","onMouseMove","nativeEvent","handleMouseMove","getChildren","nodes","allChildren","_node$context","currentChildren","_currentChildren","some","n","_node$context2","concat","counterMap","WeakMap","uncontrolledElementsSet","WeakSet","markerMap","lockCount","supportsInert","HTMLElement","unwrapHost","host","parentNode","correctElements","parent","targets","contains","correctedTarget","markOthers","avoidElements","ariaHidden","inert","uncorrectedAvoidElements","markerName","controlAttribute","elementsToKeep","Set","elementsToStop","hiddenElements","markerCounter","keep","has","add","deep","attr","alreadyHidden","counterValue","markerValue","clear","applyAttributeToOthers","querySelectorAll","getTabbableOptions","getShadowRoot","displayCheck","ResizeObserver","getTabbableIn","container","direction","allTabbable","reverse","activeIndex","getNextTabbable","getPreviousTabbable","isOutsideEvent","containerElement","currentTarget","disableFocusInside","dataset","tabindex","enableFocusInside","HIDDEN_STYLES","border","clip","margin","overflow","padding","whiteSpace","top","left","setActiveElementOnTab","timeoutId","FocusGuard","role","setRole","restProps","tabIndex","PortalContext","FloatingPortal","root","preserveTabOrder","portalNode","uniqueId","portalContext","usePortalContext","setPortalNode","portalNodeRef","remove","queueMicrotask","existingIdRoot","getElementById","subRoot","createElement","appendChild","idWrapper","useFloatingPortalNode","focusManagerState","setFocusManagerState","beforeOutsideRef","afterOutsideRef","beforeInsideRef","afterInsideRef","shouldRenderGuards","modal","onFocus","_beforeInsideRef$curr","prevTabbable","createPortal","_afterInsideRef$curre","nextTabbable","closeOnFocusOut","LIST_LIMIT","previouslyFocusedElements","addPreviouslyFocusedElement","isConnected","tabbableEl","tabbableChild","getPreviouslyFocusedElement","VisuallyHiddenDismiss","FloatingFocusManager","disabled","order","guards","_guards","initialFocus","returnFocus","restoreFocus","visuallyHiddenDismiss","nodeId","floatingId","ignoreInitialFocus","isUntrappedTypeableCombobox","orderRef","initialFocusRef","returnFocusRef","startDismissButtonRef","endDismissButtonRef","preventReturnFocusRef","isPointerDownRef","tabbableIndexRef","isInsidePortal","firstElementChild","floatingFocusNode","getTabbableContent","getTabbableElements","content","Boolean","flat","renderDismissButton","location","onClick","onKeyDown","els","shiftKey","handleFocusIn","tabbableIndex","handleFocusOutside","handlePointerDown","movedToUnrelatedNode","_nodes$find","allAncestors","currentParentId","currentNode","getAncestors","_node$context3","_node$context4","prevTabbableIndex","tabbableContent","nodeToFocus","_portalContext$portal","portalNodes","insideElements","cleanup","previouslyFocusedElement","focusableElements","initialFocusValue","elToFocus","focusAlreadyInsideFloatingEl","preventReturnFocusScroll","nested","activeEl","isFocusInsideFloatingTree","_node$context5","returnElement","MutationObserver","handleMutation","observer","observe","childList","subtree","attributes","disconnect","_portalContext$before","_portalContext$afterO","activeLocks","FloatingOverlay","lockScroll","rest","lockId","isIOS","test","bodyStyle","paddingProp","round","getBoundingClientRect","scrollLeft","scrollbarWidth","innerWidth","clientWidth","scrollX","parseFloat","pageXOffset","scrollY","pageYOffset","_window$visualViewpor","_window$visualViewpor2","offsetLeft","visualViewport","offsetTop","right","scrollTo","bottom","isButtonTarget","tagName","isSpaceIgnored","useClick","eventOption","toggle","ignoreMouse","keyboardHandlers","didKeyDownRef","onMouseDown","button","preventDefault","defaultPrevented","onKeyUp","bubbleHandlerKeys","pointerdown","mousedown","click","captureHandlerKeys","normalizeProp","normalizable","_normalizable$escapeK","_normalizable$outside","escapeKey","outsidePress","useDismiss","unstable_outsidePress","outsidePressEvent","referencePress","referencePressEvent","ancestorScroll","bubbles","capture","outsidePressFn","insideReactTreeRef","endedOrStartedInsideRef","escapeKeyBubbles","outsidePressBubbles","escapeKeyCapture","outsidePressCapture","closeOnEscapeKeyDown","_dataRef$current$floa","stopPropagation","shouldDismiss","child","_child$context","__escapeKeyBubbles","closeOnEscapeKeyDownCapture","_getTarget2","_getTarget","closeOnPressOutside","_dataRef$current$floa2","insideReactTree","endedOrStartedInside","inertSelector","markers","targetRootAncestor","nextParent","marker","canScrollX","scrollWidth","canScrollY","clientHeight","scrollHeight","xCond","offsetX","offsetWidth","offsetY","targetIsInsideChildren","_child$context2","__outsidePressBubbles","closeOnPressOutsideCapture","_getTarget4","_getTarget3","onScroll","ancestors","contextElement","ancestor","_doc$defaultView","defaultView","passive","onMouseUp","useFloating","internalRootContext","onOpenChangeProp","elementsProp","positionReference","setPositionReference","useFloatingRootContext","rootContext","computedElements","_domReference","setDomReference","_setPositionReference","domReferenceRef","computedPositionReference","setReference","useFocus","visibleOnly","blockFocusRef","keyboardModalityRef","win","onBlur","Error","matches","e","movedToFocusGuard","ownerDocument","ACTIVE_KEY","SELECTED_KEY","mergeProps","userProps","propsList","elementKey","isItem","domUserProps","_","__","validProps","propsOrGetProps","reduce","acc","val","useInteractions","deps","getReferenceProps","getFloatingProps","getItemProps","item","isPreventScrollSupported","doSwitch","vertical","horizontal","isMainOrientationKey","isMainOrientationToEndKey","rtl","isCrossOrientationCloseKey","useListNavigation","onNavigate","unstable_onNavigate","selectedIndex","allowEscape","virtual","focusItemOnOpen","focusItemOnHover","openOnArrowKeyDown","scrollItemIntoView","virtualItemRef","itemSizes","focusItemOnOpenRef","indexRef","keyRef","isPointerModalityRef","previousOnNavigateRef","previousMountedRef","forceSyncFocus","forceScrollIntoViewRef","disabledIndicesRef","latestOpenRef","scrollItemIntoViewRef","floatingRef","selectedIndexRef","activeId","setActiveId","virtualId","setVirtualId","focusItem","forceScrollIntoView","runFocus","initialItem","waitedItem","scrollIntoViewOptions","scrollIntoView","block","inline","runs","waitForListPopulated","treeContainsActiveEl","handleVirtualFocus","hasActiveIndex","syncCurrentTarget","_ref3","onPointerLeave","_ref4","currentIndex","minGridIndex","findIndex","maxGridIndex","foundIndex","itemIndex","min","max","checkVirtualMouse","ariaActiveDescendantProp","activeItem","isArrowKey","isCrossOpenKey","isCrossOrientationOpenKey","isCrossCloseKey","isMainKey","isNavigationKey","trim","rootNode","deepestNode","deepestNodeId","maxDepth","findDeepest","depth","getDeepestNode","eventObject","KeyboardEvent","_deepestNode$context","_deepestNode$context2","isCurrentTarget","dispatchItem","dispatchEvent","_deepestNode$context$","onPointerMove","componentRoleToAriaRoleMap","useRole","_componentRoleToAriaR","ariaRole","referenceId","isNested","floatingProps","active","selected","commonProps","useTypeahead","onMatch","unstable_onMatch","onTypingChange","unstable_onTypingChange","findMatch","resetMs","ignoreKeys","timeoutIdRef","stringRef","prevIndexRef","matchIndexRef","findMatchRef","ignoreKeysRef","setTypingChange","typing","getMatchingIndex","orderedList","string","str","text","toLocaleLowerCase","listContent","ctrlKey","metaKey","altKey","_text$","_text$2","isPointInPolygon","point","polygon","isInside","xi","yi","xj","yj","safePolygon","buffer","requireIntent","hasLanded","lastX","lastY","lastCursorTime","performance","now","placement","close","clientPoint","isLeave","isOverFloatingEl","isOverReferenceEl","refRect","rect","side","split","cursorLeaveFromRight","cursorLeaveFromBottom","isOverReferenceRect","isFloatingWider","isFloatingTaller","rectPoly","cursorSpeed","currentTime","elapsedTime","deltaX","deltaY","distance","sqrt","getCursorSpeed","cursorPointOne","cursorPointTwo","getPolygon"],"sourceRoot":""}