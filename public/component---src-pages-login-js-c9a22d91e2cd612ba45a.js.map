{"version":3,"file":"component---src-pages-login-js-c9a22d91e2cd612ba45a.js","mappings":"oKAyCA,IArCgB,CAACA,EAAWC,EAAOC,KAC/B,MAAM,EAACC,EAAK,EAACC,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IAEvCG,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAYC,aAAaC,QAAQ,QAEnCF,GACAL,EAAQQ,KAAKC,MAAMJ,GACvB,GACD,IAwBH,MAAO,CAAEN,OAAMG,UAASQ,MAtBVC,MAAOf,EAAWC,EAAOC,KACnCK,GAAW,GAEX,IACI,MAAMS,QAAiBC,EAAAA,EAAMC,KAAK,0EAA2E,CACzGlB,YACAC,QACAC,aAG6B,MAA7Bc,EAASG,KAAKC,YACdhB,EAAQY,EAASG,KAAKE,MAG1BX,aAAaY,QAAQ,OAAQV,KAAKW,UAAUP,EAASG,KAAKE,MAC9D,CAAE,MAAOG,GACLpB,EAAQ,KACZ,CAEAG,GAAW,EAAM,EAGU,C,sGCsCnC,UAjEc,KACV,MAAM,KAAEY,IAASM,EAAAA,EAAAA,MACX,KAAEtB,EAAI,QAAEG,EAAO,MAAEQ,IAAUY,EAAAA,EAAAA,MAE3B,EAACzB,EAAM,EAAC0B,IAAYtB,EAAAA,EAAAA,UAAS,KAC7B,EAACH,EAAS,EAAC0B,IAAevB,EAAAA,EAAAA,UAAS,KAEzCG,EAAAA,EAAAA,YAAU,KACN,GAAIL,EAAM,CACN,MAAM0B,EAAWnB,aAAaC,QAAQ,YAElCkB,IACAnB,aAAaoB,WAAW,aACxBC,EAAAA,EAAAA,IAASF,KAGbE,EAAAA,EAAAA,IAAS,IACb,IACD,CAAC5B,IAiBJ,OAAKgB,EAKD,gBAAC,IAAM,CAACA,KAAOA,GACX,uBAAKa,UAAU,4FACX,uBAAKA,UAAU,8EACX,sBAAIA,UAAU,sDAAsDC,MAAQ,CAAEC,MAAOf,EAAKe,QAAU,UACpG,wBAAMC,SAxBFpB,UAChBqB,EAAMC,iBAEU,SAAZlB,EAAKmB,SAKHxB,EAAMK,EAAKmB,GAAIrC,EAAOC,GAJxBqC,MAAM,wCAI2B,GAiBrB,uBAAKP,UAAU,QACX,gBAAC,KAAS,CAACM,GAAG,QAAQE,KAAK,QAAQC,MAAQxC,EAAQyC,SAAYN,GAAUT,EAASS,EAAMO,OAAOF,OAASG,YAAY,iBAAiBC,UAAQ,KAGjJ,uBAAKb,UAAU,QACX,gBAAC,KAAS,CAACM,GAAG,WAAWE,KAAK,WAAWC,MAAQvC,EAAWwC,SAAYN,GAAUR,EAAYQ,EAAMO,OAAOF,OAASG,YAAY,WAAWC,UAAQ,KAGvJ,gBAAC,KAAM,CAACL,KAAK,SAASR,UAAU,SAASE,MAAM,WAAY5B,EAAU,gBAAkB,WAG3F,uBAAK0B,UAAU,4BACX,gBAAC,KAAM,CAACc,QA1BL/B,gBACbgB,EAAAA,EAAAA,IAAS,YAAY,EAyBwBG,MAAM,OAAOF,UAAU,UAAS,gBArB5E,gBAAC,IAAO,KAyBN,C","sources":["webpack://gatsby-starter-hello-world/./src/hooks/useUser.js","webpack://gatsby-starter-hello-world/./src/pages/login.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nconst useUser = (tenant_id, email, password) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const localUser = localStorage.getItem('user');\r\n\r\n        if (localUser) {\r\n            setUser(JSON.parse(localUser));\r\n        }\r\n    }, []);\r\n\r\n    const login = async (tenant_id, email, password) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post('https://zygv7lwv32.execute-api.us-east-1.amazonaws.com/prod/users/login', {\r\n                tenant_id,\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (response.data.statusCode === 200) {\r\n                setUser(response.data.body);\r\n            }\r\n\r\n            localStorage.setItem('user', JSON.stringify(response.data.body));\r\n        } catch (error) {\r\n            setUser(null);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return { user, loading, login };\r\n};\r\n\r\nexport default useUser;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { navigate } from 'gatsby';\r\nimport { Button, TextInput } from 'flowbite-react';\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nimport useData from \"../hooks/useData\";\r\nimport useUser from \"../hooks/useUser\";\r\n\r\nconst Login = () => {\r\n    const { data } = useData();\r\n    const { user, loading, login } = useUser();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const redirect = localStorage.getItem('redirect');\r\n\r\n            if (redirect) {\r\n                localStorage.removeItem('redirect');\r\n                navigate(redirect);\r\n            }\r\n\r\n            navigate('/');\r\n        }\r\n    }, [user]);\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (data.id === 'NONE') {\r\n            alert('You cannot login on our demo page. :D');\r\n            return;\r\n        }\r\n\r\n        await login(data.id, email, password)\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        await navigate('/register');\r\n    };\r\n\r\n    if (!data) {\r\n        return <Loading/>;\r\n    }\r\n\r\n    return (\r\n        <Layout data={ data }>\r\n            <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-gray-100 to-gray-300\">\r\n                <div className=\"w-full max-w-md p-6 bg-white shadow-lg rounded-lg border-2 border-gray-200\">\r\n                    <h2 className=\"text-3xl font-bold text-center text-indigo-600 mb-6\" style={ { color: data.color } }>Log In</h2>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"mb-4\">\r\n                            <TextInput id=\"email\" type=\"email\" value={ email } onChange={ (event) => setEmail(event.target.value) } placeholder=\"john@email.com\" required/>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <TextInput id=\"password\" type=\"password\" value={ password } onChange={ (event) => setPassword(event.target.value) } placeholder=\"********\" required/>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" className=\"w-full\" color=\"success\">{ loading ? 'Logging in...' : 'Log In' }</Button>\r\n                    </form>\r\n\r\n                    <div className=\"flex justify-center mt-4\">\r\n                        <Button onClick={ handleRegister } color=\"info\" className=\"w-full\">Register</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["tenant_id","email","password","user","setUser","useState","loading","setLoading","useEffect","localUser","localStorage","getItem","JSON","parse","login","async","response","axios","post","data","statusCode","body","setItem","stringify","error","useData","useUser","setEmail","setPassword","redirect","removeItem","navigate","className","style","color","onSubmit","event","preventDefault","id","alert","type","value","onChange","target","placeholder","required","onClick"],"sourceRoot":""}